#!/bin/bash

#This script is used to run evosuite on certain bug versions of Time (on the versions that were fixed). Evosuite will run all of the classes, allocating 60 seconds per class.
#Output: tests, number of failing tests on the buggy version, number of tests on the fixed version, and the difference between them.

export PATH=$PATH:~/defects4j/framework/bin
echo starting
FILE=Report.csv
echo "project, BugID, Bugged class, Time given to evosuite, Num of failures" > $FILE
NAME=Time
TESTS=27
for i in 1 2 4
do
	defects4j checkout -p $NAME -v $i"f" -w $NAME$i"fixed"/
	echo checkedout
	(cd $NAME$i"fixed"; ant compile)
	defects4j checkout -p $NAME -v $i"f" -w $NAME$i"buggy"/
	echo checkedout
	(cd $NAME$i"buggy"; ant compile)

	BUILDPATH="$NAME"$i"fixed/target/classes"
	t=60
	for j in {1..5}
	do
		java -jar evosuite-1.0.3.jar -prefix org -projectCP $BUILDPATH  -Dsearch_budget=$t -Dassertion_timeout=$t -Dextra_timeout=$t
		cp -r evosuite-tests "evosuite-tests_"$NAME"_"$i"_"$j
		rm -rf evosuite-tests
		
		#compile the classes. note that for other projects, additional '*' may be required.
		javac evosuite-tests_"$NAME"_"$i"_"$j"/*/*/*/*.java -cp "evosuite-runtime-1.0.3.jar:evosuite-tests:hamcrest-core-1.3.jar:junit-4.12.jar:"$BUILDPATH
		javac evosuite-tests_"$NAME"_"$i"_"$j"/*/*/*/*/*.java -cp "evosuite-runtime-1.0.3.jar:evosuite-tests:hamcrest-core-1.3.jar:junit-4.12.jar:"$BUILDPATH
		#get a list of all the classes and test with junit
		A=$(find "evosuite-tests_Time_"$i"_"$j -name *est.class) #path
		B=${A//evosuite-tests_Time_????/} #remove the initial
		C=${B//.class/} #remove the .class
		D=${C//"/"/.} #turn '/' to '.'
		CLASSES=$(echo $D | tr " " "\n") #split
		for CLASS in $CLASSES #run tests
		do 
			java -cp "evosuite-tests_Time_"$i"_"$j":evosuite-runtime-1.0.3.jar:junit-4.12.jar:hamcrest-core-1.3.jar:"Time"$i"buggy/target/classes org.junit.runner.JUnitCore $CLASS >> FixedOnBuggy_"$i"_"$j" #on buggy version
			java -cp "evosuite-tests_Time_"$i"_"$j":evosuite-runtime-1.0.3.jar:junit-4.12.jar:hamcrest-core-1.3.jar:"Time"$i"fixed/target/classes org.junit.runner.JUnitCore $CLASS >> FixedOnBuggy_"$i"_"$j"_Fixed #on fixed version
		done
		diff FixedOnBuggy_"$i"_"$j" FixedOnBuggy_"$i"_"$j"_Fixed > diff_"$i"_"$j" #check the actual difference
	done
done

NAME=Time
TESTS=27
for i in 12 15 17 18 23 27
do
	defects4j checkout -p $NAME -v $i"f" -w $NAME$i"fixed"/
	echo checkedout
	(cd $NAME$i"fixed"; ant compile)
	BUILDPATH="$NAME"$i"fixed/build/classes"
	t=60
	for j in {1..5}
	do
		java -jar evosuite-1.0.3.jar -prefix org -projectCP $BUILDPATH  -Dsearch_budget=$t -Dassertion_timeout=$t -Dextra_timeout=$t
		cp -r evosuite-tests "evosuite-tests_"$NAME"_"$i"_"$j
		rm -rf evosuite-tests

		#compile the classes. note that for other projects, additional '*' may be required.
		javac evosuite-tests_"$NAME"_"$i"_"$j"/*/*/*/*.java -cp "evosuite-runtime-1.0.3.jar:evosuite-tests:hamcrest-core-1.3.jar:junit-4.12.jar:"$BUILDPATH
		javac evosuite-tests_"$NAME"_"$i"_"$j"/*/*/*/*/*.java -cp "evosuite-runtime-1.0.3.jar:evosuite-tests:hamcrest-core-1.3.jar:junit-4.12.jar:"$BUILDPATH
		#get a list of all the classes and test with junit
		A=$(find "evosuite-tests_Time_"$i"_"$j -name *est.class) #path
		B=${A//evosuite-tests_Time_?????/} #remove the initial
		C=${B//.class/} #remove the .class
		D=${C//"/"/.} #turn '/' to '.'
		CLASSES=$(echo $D | tr " " "\n") #split
		for CLASS in $CLASSES #run tests
		do 
			java -cp "evosuite-tests_Time_"$i"_"$j":evosuite-runtime-1.0.3.jar:junit-4.12.jar:hamcrest-core-1.3.jar:"Time"$i"buggy/build/classes org.junit.runner.JUnitCore $CLASS >> FixedOnBuggy_"$i"_"$j" #on buggy version
			java -cp "evosuite-tests_Time_"$i"_"$j":evosuite-runtime-1.0.3.jar:junit-4.12.jar:hamcrest-core-1.3.jar:"Time"$i"fixed/build/classes org.junit.runner.JUnitCore $CLASS >> FixedOnBuggy_"$i"_"$j"_Fixed #on fixed version
		done
		diff FixedOnBuggy_"$i"_"$j" FixedOnBuggy_"$i"_"$j"_Fixed > diff_"$i"_"$j" #check the actual difference

	done
done





