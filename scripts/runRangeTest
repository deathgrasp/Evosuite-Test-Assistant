#!/bin/bash

#this script runs tests on the bugged class in various files. It creates tests for the class on the fixed version, and then tests the buggy version.
#it creates a test suite of 5 tries per class, with time allocation of [1, 5, 10, 15, 20, 120, 180, 300, 600] seconds
#output: tests, a CSV with the results from each test (how many of the attempts had a class failing)

export PATH=$PATH:~/defects4j/framework/bin
echo starting
FILE=Report.csv
echo "project, BugID, Bugged class, Time given to evosuite, Num of failures" > $FILE

for t in 1 5 10 15 20 120 180 300 600
do
	NAME=Time
	TESTS=27
	for i in {1..11}
	do
		A=$(defects4j info -p $NAME -b $i)
        	B=$(awk 'f {print; exit} /List of modified/ {f=1}' <<<"$A")
	        C=$(echo $B| cut -d ' ' -f 2)
		defects4j checkout -p $NAME -v $i"f" -w $NAME$i"fixed"/
		echo checkedout
		(cd $NAME$i"fixed"; ant compile)
		JFREE="$NAME"$i"fixed/target/classes"
		for j in {1..5}
		do
			java -jar evosuite-1.0.3.jar -class $C -projectCP $JFREE  -Dsearch_budget=$t -Dassertion_timeout=$t -Dextra_timeout=$t
			D=evosuite-tests/$(echo $C | tr '.' '/')_ESTest.java
			javac $D -cp "evosuite-runtime-1.0.3.jar:evosuite-tests:hamcrest-core-1.3.jar:junit-4.12.jar:"$JFREE
			cp -r evosuite-tests "evosuite-tests_"$NAME"_"$i"_"$j"_t"$t
			rm -rf evosuite-tests
		done
	done

	echo "starting testing on the buggy"
	for i in {1..11}
	do
		A=$(defects4j info -p $NAME -b $i)
	        B=$(awk 'f {print; exit} /List of modified/ {f=1}' <<<"$A")
        	C=$(echo $B| cut -d ' ' -f 2)
		defects4j checkout -p $NAME -v $i"b" -w $NAME$i"buggy"/
		echo checkedout
		(cd $NAME$i"buggy"; ant compile)
		JFREE="$NAME"$i"buggy/target/classes"
		for j in {1..5}
		do
			java -cp "evosuite-runtime-1.0.3.jar:evosuite-tests_"$NAME"_"$i"_"$j"_t"$t":junit-4.12.jar:hamcrest-core-1.3.jar:"$JFREE org.junit.runner.JUnitCore $C"_ESTest" >> FixedOnBuggy_"$NAME"_"$i"_t"$t"
		done
		echo "done with $NAME version "$i >> FixedOnBuggy_"$NAME"_"$i"_t"$t"
		COUNT=$(grep -c "FAILURES\!\!\!" FixedOnBuggy_"$NAME"_"$i"_t"$t")
		echo $NAME, $i, $C, $t, $COUNT >> $FILE
	done
done
NAME=Time
TESTS=27
for t in 1 5 10 15 20 120 180 300 600
do
for i in {12..27}
do
	A=$(defects4j info -p $NAME -b $i)
        B=$(awk 'f {print; exit} /List of modified/ {f=1}' <<<"$A")
        C=$(echo $B| cut -d ' ' -f 2)
	defects4j checkout -p $NAME -v $i"f" -w $NAME$i"fixed"/
	echo checkedout
	(cd $NAME$i"fixed"; ant compile)
	JFREE="$NAME"$i"fixed/build/classes"
	for j in {1..5}
	do
		java -jar evosuite-1.0.3.jar -class $C -projectCP $JFREE  -Dsearch_budget=$t -Dassertion_timeout=$t -Dextra_timeout=$t
		D=evosuite-tests/$(echo $C | tr '.' '/')_ESTest.java
		javac $D -cp "evosuite-runtime-1.0.3.jar:evosuite-tests:hamcrest-core-1.3.jar:junit-4.12.jar:"$JFREE
		cp -r evosuite-tests "evosuite-tests_"$NAME"_"$i"_"$j"_t"$t
		rm -rf evosuite-tests
	done
done

echo "starting testing on the buggy"
for i in {12..27}
do
	A=$(defects4j info -p $NAME -b $i)
        B=$(awk 'f {print; exit} /List of modified/ {f=1}' <<<"$A")
        C=$(echo $B| cut -d ' ' -f 2)
	defects4j checkout -p $NAME -v $i"b" -w $NAME$i"buggy"/
	echo checkedout
	(cd $NAME$i"buggy"; ant compile)
	JFREE="$NAME"$i"buggy/build/classes"
	for j in {1..5}
	do
		java -cp "evosuite-runtime-1.0.3.jar:evosuite-tests_"$NAME"_"$i"_"$j"_t"$t":junit-4.12.jar:hamcrest-core-1.3.jar:"$JFREE org.junit.runner.JUnitCore $C"_ESTest" >> FixedOnBuggy_"$NAME"_"$i"_t"$t"
	done
	echo "done with $NAME version "$i >> FixedOnBuggy_"$NAME"_"$i"_t"$t"
	COUNT=$(grep -c "FAILURES\!\!\!" FixedOnBuggy_"$NAME"_"$i"_t"$t")
	echo $NAME, $i, $C, $t, $COUNT >> $FILE
done
mv evosuite-report evo-report_"$NAME"
done


for t in 1 5 10 15 20 120 180 300 600
do
NAME=Chart
TESTS=26
for i in {1..26}
do
	A=$(defects4j info -p $NAME -b $i)
        B=$(awk 'f {print; exit} /List of modified/ {f=1}' <<<"$A")
        C=$(echo $B| cut -d ' ' -f 2)
	defects4j checkout -p $NAME -v $i"f" -w $NAME$i"fixed"/
	echo checkedout

        (cd $NAME$i"fixed"/ant; ant compile>../../JFREE.txt)
	JFREEtmp=$(cat JFREE.txt)
        echo $JFREEtmp
        JFREEline=$(awk 'f {print; exit} /jar/ ' <<<"$JFREEtmp")
        JFREE="$NAME"$i"Fixed"/$(echo $JFREEline| cut -d'/' -f 8)

	for j in {1..5}
	do
		java -jar evosuite-1.0.3.jar -class $C -projectCP $JFREE  -Dsearch_budget=$t -Dassertion_timeout=$t -Dextra_timeout=$t
		D=evosuite-tests/$(echo $C | tr '.' '/')_ESTest.java
		javac $D -cp "evosuite-runtime-1.0.3.jar:evosuite-tests:hamcrest-core-1.3.jar:junit-4.12.jar:"$JFREE
		cp -r evosuite-tests "evosuite-tests_"$NAME"_"$i"_"$j"_t"$t
		rm -rf evosuite-tests
	done
done

echo "starting testing on the buggy"
for i in {1..26}
do
	A=$(defects4j info -p $NAME -b $i)
        B=$(awk 'f {print; exit} /List of modified/ {f=1}' <<<"$A")
        C=$(echo $B| cut -d ' ' -f 2)
	defects4j checkout -p $NAME -v $i"b" -w $NAME$i"buggy"/
	echo checkedout
	(cd $NAME$i"buggy"/ant; ant compile>../../JFREE.txt)
	JFREEtmp=$(cat JFREE.txt)
        echo $JFREEtmp
        JFREEline=$(awk 'f {print; exit} /jar/ ' <<<"$JFREEtmp")
        JFREE="$NAME"$i"buggy"/$(echo $JFREEline| cut -d'/' -f 8)

	for j in {1..5}
	do
		java -cp "evosuite-runtime-1.0.3.jar:evosuite-tests_"$NAME"_"$i"_"$j"_t"$t":junit-4.12.jar:hamcrest-core-1.3.jar:"$JFREE org.junit.runner.JUnitCore $C"_ESTest" >> FixedOnBuggy_"$NAME"_"$i"_t"$t"
	done
	echo "done with $NAME version "$i >> FixedOnBuggy_"$NAME"_"$i"_t"$t"
	COUNT=$(grep -c "FAILURES\!\!\!" FixedOnBuggy_"$NAME"_"$i"_t"$t")
	echo $NAME, $i, $C, $t, $COUNT >> $FILE
done
mv evosuite-report evo-report_"$NAME"
done

for t in 1 5 10 15 20 120 180 300 600
do
NAME=Lang
TESTS=65
for i in {1..65}
do
	A=$(defects4j info -p $NAME -b $i)
        B=$(awk 'f {print; exit} /List of modified/ {f=1}' <<<"$A")
        C=$(echo $B| cut -d ' ' -f 2)
	defects4j checkout -p $NAME -v $i"f" -w $NAME$i"fixed"/
	echo checkedout
	(cd $NAME$i"fixed"; ant compile)
	JFREE="$NAME"$i"fixed/target/classes"
	for j in {1..5}
	do
		java -jar evosuite-1.0.3.jar -class $C -projectCP $JFREE  -Dsearch_budget=$t -Dassertion_timeout=$t -Dextra_timeout=$t
		D=evosuite-tests/$(echo $C | tr '.' '/')_ESTest.java
		javac $D -cp "evosuite-runtime-1.0.3.jar:evosuite-tests:hamcrest-core-1.3.jar:junit-4.12.jar:"$JFREE
		cp -r evosuite-tests "evosuite-tests_"$NAME"_"$i"_"$j"_t"$t
		rm -rf evosuite-tests
	done
done

echo "starting testing on the buggy"
for i in {1..65}
do
	A=$(defects4j info -p $NAME -b $i)
        B=$(awk 'f {print; exit} /List of modified/ {f=1}' <<<"$A")
        C=$(echo $B| cut -d ' ' -f 2)
	defects4j checkout -p $NAME -v $i"b" -w $NAME$i"buggy"/
	echo checkedout
	(cd $NAME$i"buggy"; ant compile)
	JFREE="$NAME"$i"buggy/target/classes"
	for j in {1..5}
	do
		java -cp "evosuite-runtime-1.0.3.jar:evosuite-tests_"$NAME"_"$i"_"$j"_t"$t":junit-4.12.jar:hamcrest-core-1.3.jar:"$JFREE org.junit.runner.JUnitCore $C"_ESTest" >> FixedOnBuggy_"$NAME"_"$i"_t"$t"
	done
	echo "done with $NAME version "$i >> FixedOnBuggy_"$NAME"_"$i"_t"$t"
	COUNT=$(grep -c "FAILURES\!\!\!" FixedOnBuggy_"$NAME"_"$i"_t"$t")
	echo $NAME, $i, $C, $t, $COUNT >> $FILE
done
mv evosuite-report evo-report_"$NAME"
done



for t in 1 5 10 15 20 120 180 300 600
do
NAME=Math
TESTS=106
for i in {1..106}
do
	A=$(defects4j info -p $NAME -b $i)
        B=$(awk 'f {print; exit} /List of modified/ {f=1}' <<<"$A")
        C=$(echo $B| cut -d ' ' -f 2)
	defects4j checkout -p $NAME -v $i"f" -w $NAME$i"fixed"/
	echo checkedout
	(cd $NAME$i"fixed"; ant compile)
	JFREE="$NAME"$i"fixed/target/classes"
	for j in {1..5}
	do
		java -jar evosuite-1.0.3.jar -class $C -projectCP $JFREE  -Dsearch_budget=$t -Dassertion_timeout=$t -Dextra_timeout=$t
		D=evosuite-tests/$(echo $C | tr '.' '/')_ESTest.java
		javac $D -cp "evosuite-runtime-1.0.3.jar:evosuite-tests:hamcrest-core-1.3.jar:junit-4.12.jar:"$JFREE
		cp -r evosuite-tests "evosuite-tests_"$NAME"_"$i"_"$j"_t"$t
		rm -rf evosuite-tests
	done
done

echo "starting testing on the buggy"
for i in {1..106}
do
	A=$(defects4j info -p $NAME -b $i)
        B=$(awk 'f {print; exit} /List of modified/ {f=1}' <<<"$A")
        C=$(echo $B| cut -d ' ' -f 2)
	defects4j checkout -p $NAME -v $i"b" -w $NAME$i"buggy"/
	echo checkedout
	(cd $NAME$i"buggy"; ant compile)
	JFREE="$NAME"$i"buggy/target/classes"
	for j in {1..5}
	do
		java -cp "evosuite-runtime-1.0.3.jar:evosuite-tests_"$NAME"_"$i"_"$j"_t"$t":junit-4.12.jar:hamcrest-core-1.3.jar:"$JFREE org.junit.runner.JUnitCore $C"_ESTest" >> FixedOnBuggy_"$NAME"_"$i"_t"$t"
	done
	echo "done with $NAME version "$i >> FixedOnBuggy_"$NAME"_"$i"_t"$t"
	COUNT=$(grep -c "FAILURES\!\!\!" FixedOnBuggy_"$NAME"_"$i"_t"$t")
	echo $NAME, $i, $C, $t, $COUNT >> $FILE
done
mv evosuite-report evo-report_"$NAME"
done





for t in 1 5 10 15 20 120 180 300 600
do
NAME=Closure
TESTS=133
for i in {1..133}
do
	A=$(defects4j info -p $NAME -b $i)
        B=$(awk 'f {print; exit} /List of modified/ {f=1}' <<<"$A")
        C=$(echo $B| cut -d ' ' -f 2)
	defects4j checkout -p $NAME -v $i"f" -w $NAME$i"fixed"/
	echo checkedout
	(cd $NAME$i"fixed"; ant compile)
	JFREE="$NAME"$i"fixed/build/classes":"$NAME"$i"fixed/lib/guava.jar"
	for j in {1..5}
	do
		java -jar evosuite-1.0.3.jar -class $C -projectCP $JFREE  -Dsearch_budget=$t -Dassertion_timeout=$t -Dextra_timeout=$t
		D=evosuite-tests/$(echo $C | tr '.' '/')_ESTest.java
		javac $D -cp "evosuite-runtime-1.0.3.jar:evosuite-tests:hamcrest-core-1.3.jar:junit-4.12.jar:"$JFREE
		cp -r evosuite-tests "evosuite-tests_"$NAME"_"$i"_"$j"_t"$t
		rm -rf evosuite-tests
	done
done

echo "starting testing on the buggy"
for i in {1..133}
do
	A=$(defects4j info -p $NAME -b $i)
        B=$(awk 'f {print; exit} /List of modified/ {f=1}' <<<"$A")
        C=$(echo $B| cut -d ' ' -f 2)
	defects4j checkout -p $NAME -v $i"b" -w $NAME$i"buggy"/
	echo checkedout
	(cd $NAME$i"buggy"; ant compile)
	JFREE="$NAME"$i"buggy/build/classes":"$NAME"$i"fixed/lib/guava.jar"
	for j in {1..5}
	do
		java -cp "evosuite-runtime-1.0.3.jar:evosuite-tests_"$NAME"_"$i"_"$j"_t"$t":junit-4.12.jar:hamcrest-core-1.3.jar:"$JFREE org.junit.runner.JUnitCore $C"_ESTest" >> FixedOnBuggy_"$NAME"_"$i"_t"$t"
	done
	echo "done with $NAME version "$i >> FixedOnBuggy_"$NAME"_"$i"_t"$t"
	COUNT=$(grep -c "FAILURES\!\!\!" FixedOnBuggy_"$NAME"_"$i"_t"$t")
	echo $NAME, $i, $C, $t, $COUNT >> $FILE
done
mv evosuite-report evo-report_"$NAME"
done